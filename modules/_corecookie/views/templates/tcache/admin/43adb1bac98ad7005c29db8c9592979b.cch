/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Commercial License and is not open source.
 * Each license that you purchased is only available for 1 website only.
 * You can't distribute, modify or sell this code.
 * If you want to use this file on more websites, you need to purchase additional licenses.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file.
 * If you need help please contact <attechteams@gmail.com>
 *
 * @author    Alpha Tech <attechteams@gmail.com>
 * @copyright 2022 Alpha Tech
 * @license   opensource.org/licenses/AFL-3.0 Academic Free License version 3.0
 */

(function(){AP.putBaseBlock( "  " +Render.render('corecookie_menu', {}, '')+ " " +Render.render('master_page', {gray:1}, '' +Render.render('page_header', {title:__("Cookie Bar Behavior"), subtitle:__("Set up your store cookie bar behavior."), compact:1, borderless:1}, '' +Render.render('side', {}, '' +Render.render('button', {label:__("Save"), icon: "save" , url: ":setting_behavior/-/save" , cta:1}, '')+ '')+ '')+ " " +Render.render('page_body', {gray:1, borderless:1, scroll:1}, '' +Render.render('form', {action:Client.current_path, id: "js-form-bar-behavior" }, '' +Render.render('block', {compact:1}, '' +Render.render('grid_row', {}, '' +Render.render('grid_col', {col: "5,5,5" }, '' +Render.render('form_input', {label:__("Initial State Of The Cookie Bar"), value:AP.word.join(Client.pageData.settings.initial_state_cookie_bar, ","), type: "checkbox" , options:CookieBar.INITIAL_COOKIE_OF_STATES, new_line:1}, '')+ " " +Render.render('form_input', {explain:__("Displays preset cookie information"), type: "switch" , label:__("Display Cookie Categories"), _name: "references_display_cookie_categories" , checked:se(Client.pageData.settings.references_display_cookie_categories, 1), text_on:__("Yes"), text_off:__("No")}, '')+ " " +Render.render('form_input', {type: "switch" , label:__("Regard the Initial State Of The Cookie Bar for the Accept button"), _name: "regard_initial_state_when_accept_cookie_bar" , checked:se(Client.pageData.settings.regard_initial_state_when_accept_cookie_bar, 1), text_on:__("Yes"), text_off:__("No")}, '')+ " " +Render.render('form_input', {_class: "input-awtciicotcb" , label:__("Action When the Close/X Icon is Clicked on the Cookie bar"), value:AP.word.join(Client.pageData.settings.states_when_close_cookie_bar, ","), type: "checkbox" , options:CookieBar.ACTION_STATES_WHEN_CLOSE, new_line:1}, '')+ '')+ " " +Render.render('grid_col', {col: "7,7,7" }, "<div id='js-preview'></div>")+ '')+ '')+ '')+ '')+ '')+ '','#ap650721cf8a137')})();
    CookieBar.bindEventsBehavior();
