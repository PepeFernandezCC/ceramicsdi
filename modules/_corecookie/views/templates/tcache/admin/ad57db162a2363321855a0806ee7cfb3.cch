/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Commercial License and is not open source.
 * Each license that you purchased is only available for 1 website only.
 * You can't distribute, modify or sell this code.
 * If you want to use this file on more websites, you need to purchase additional licenses.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file.
 * If you need help please contact <attechteams@gmail.com>
 *
 * @author    Alpha Tech <attechteams@gmail.com>
 * @copyright 2022 Alpha Tech
 * @license   opensource.org/licenses/AFL-3.0 Academic Free License version 3.0
 */

(function(){AP.putBaseBlock( "  " +Render.render('corecookie_menu', {}, '')+ " " +Render.render('master_page', {gray:1}, '' +Render.render('page_header', {title:__("GDPR/CCPA/APPI/PIPEDA Requests"), subtitle:__("Here you will be able to see all data subject requests submitted through the Compliance pages of your store."), compact:1, borderless:1}, '' +Render.render('side', {}, '' +Render.render('button', {id: "js-filter" , icon: "filter" , label:__("Filter")}, '')+ '')+ '')+ " " +Render.render('page_body', {gray:1, borderless:1, scroll:1}, "<div id='js-requests'></div>")+ '')+ "<div id='js-master-filters' class='core-master-filters'> " +Render.render('text_title', {_class: "title" }, ""+(__('Filters'))+"")+ " " +Render.render('icon', {icon: "close" , _class: "js-close close" }, '')+ "<div class='core-body core-scroll-y core-forced-scroll'> <div class='core-section'> " +Render.render('form_input', {type: "select" , _name: "statuses" , options:ConsentLog.getStatusByFilter(), placeholder:__("All Statuses"), label:__("Statuses"), value:AP.word.split("-", Query.get("statuses") || ""), multiple:1}, '')+ " " +Render.render('form_input', {type: "select" , _name: "metatypes" , options:ConsentLog.getMetatypeByFilter(), placeholder:__("All Metatypes"), label:__("Metatypes"), value:AP.word.split("-", Query.get("metatypes") || ""), multiple:1}, '')+ " " +Render.render('form_input', {type: "select" , _name: "sources" , options:ConsentLog.REQUEST_SOURCES, placeholder:__("All Sources"), label:__("Sources"), value:AP.word.split("-", Query.get("sources") || ""), multiple:1}, '')+ " " +Render.render('form_input', {type: "select" , _name: "customers" , options:ConsentLog.getCustomerByFilter(), placeholder:__("All Customers"), label:__("Customers"), value:AP.word.split("-", Query.get("customers") || ""), multiple:1}, '')+ " " +Render.render('form_input', {label:__("Create At"), value:Query.get("create_at"), type: "daterange" , _name: "create_at" , role: "daterange" }, '')+ "</div> </div> <div class='footer'> " +Render.render('button', {_class: "update js-submit" , label:("Apply"), not_fit:1, cta:1}, '')+ " " +Render.render('button', {_class: "btn-clear-filter" , label:__("Reset"), not_fit:1}, '')+ "</div> " +Render.render('sep', {}, '')+ "</div>",'#ap650721cf9003f')})();
    ConsentLog.boardRequests("#js-requests");
    Core.filter({
        canvas: "#js-master-filters",
        handler: '#js-filter'
    });
